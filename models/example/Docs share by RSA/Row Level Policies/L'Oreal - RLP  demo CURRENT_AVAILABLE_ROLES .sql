USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS RLS_DEMO_DB;
USE DATABASE RLS_DEMO_DB;
CREATE SCHEMA IF NOT EXISTS COMPENSATION WITH MANAGED ACCESS;
CREATE SCHEMA IF NOT EXISTS SECURITY WITH MANAGED ACCESS;

--create RLS roles for different "entitlement types"
USE ROLE USERADMIN;

--please note the naming rule: "RLS-[TYPE]-[IDENTIFIER]" -- for explicit names
--please note that while the examples were taken from the actual scoping definition, some details were changed to illustrate the RLS behaviour

--cost centers (using names instead of numbers for clarity)
CREATE ROLE IF NOT EXISTS "RLS_COST_CENTER_BT_FINANCE";
CREATE ROLE IF NOT EXISTS "RLS_COST_CENTER_BT_DIG_ESHOP";
CREATE ROLE IF NOT EXISTS "RLS_COST_CENTER_BT_IT_SUPPORT";

--entities (using names instead of codes for clarity)
CREATE ROLE IF NOT EXISTS "RLS_ENTITY_BT_EUROPE_ZONE";
CREATE ROLE IF NOT EXISTS "RLS_ENTITY_BT_AMERICAS_ZONE";
CREATE ROLE IF NOT EXISTS "RLS_ENTITY_BT_USA_LOCAL";
CREATE ROLE IF NOT EXISTS "RLS_ENTITY_BT_BRAZIL_LOCAL";
CREATE ROLE IF NOT EXISTS "RLS_ENTITY_BT_FRANCE_LOCAL";
CREATE ROLE IF NOT EXISTS "RLS_ENTITY_BT_NORDICS_LOCAL";

--some hierarchy between entities
GRANT ROLE "RLS_ENTITY_BT_USA_LOCAL"     TO ROLE "RLS_ENTITY_BT_AMERICAS_ZONE";
GRANT ROLE "RLS_ENTITY_BT_BRAZIL_LOCAL"  TO ROLE "RLS_ENTITY_BT_AMERICAS_ZONE";
GRANT ROLE "RLS_ENTITY_BT_FRANCE_LOCAL"  TO ROLE "RLS_ENTITY_BT_EUROPE_ZONE";
GRANT ROLE "RLS_ENTITY_BT_NORDICS_LOCAL" TO ROLE "RLS_ENTITY_BT_EUROPE_ZONE";

--define authorization table for cost centers
CREATE OR REPLACE TRANSIENT TABLE SECURITY.RLS_COST_CENTER
(
     COST_CENTER VARCHAR
    ,RLS_ROLE VARCHAR
);

use role sysadmin;
--populate authorization table for cost centers (in this example, using existing role names for automation)
SHOW ROLES LIKE 'RLS_COST_CENTER_%';
INSERT OVERWRITE INTO SECURITY.RLS_COST_CENTER (COST_CENTER, RLS_ROLE)
SELECT
     SPLIT_PART("name",'-',3) AS COST_CENTER 
    ,"name" AS RLS_ROLE
FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

--manually populater cost center RLS table
SELECT * FROM SECURITY.RLS_COST_CENTER;
INSERT OVERWRITE INTO SECURITY.RLS_COST_CENTER VALUES
('BT_FINANCE','RLS_COST_CENTER_BT_FINANCE');

--define authorization table for entities
CREATE OR REPLACE TRANSIENT TABLE SECURITY.RLS_ENTITY
(
     ENTITY VARCHAR
    ,RLS_ROLE VARCHAR
);

--populate authroization table for entities (the same way as with cost centers)
SHOW ROLES LIKE 'RLS_ENTITY_%';
INSERT OVERWRITE INTO SECURITY.RLS_ENTITY (ENTITY, RLS_ROLE)
SELECT --"name",
     SPLIT_PART("name",'-',3) AS ENTITY 
    ,"name" AS RLS_ROLE
FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

--manually populate entity RLS table
select * from security.rls_entity;
insert overwrite into security.rls_entity values 
 ('BT_NORDICS_LOCAL','RLS_ENTITY_BT_NORDICS_LOCAL')
,('BT_FRANCE_LOCAL','RLS_ENTITY_BT_FRANCE_LOCAL');


--preview authorization data
SELECT * FROM SECURITY.RLS_ENTITY;
SELECT * FROM SECURITY.RLS_COST_CENTER;

--tähän jäit 2022-04-27!

--create test content table
CREATE OR REPLACE TRANSIENT TABLE COMPENSATION.EMPLOYEE_SALARY
(
     EMPLOYEE_NAME VARCHAR
    ,COST_CENTER VARCHAR
    ,ENTITY VARCHAR
    ,CURRENT_SALARY DECIMAL(10,2)
);

--populate test content table
INSERT INTO COMPENSATION.EMPLOYEE_SALARY
(
     EMPLOYEE_NAME 
    ,COST_CENTER
    ,ENTITY
    ,CURRENT_SALARY
)
VALUES 
 ('OLLE','BT_FINANCE','BT_NORDICS_LOCAL',100.00)
,('OLIVER','BT_FINANCE','BT_FRANCE_LOCAL',100.00);

SELECT * FROM COMPENSATION.EMPLOYEE_SALARY;

--define row access policy based current available roles
CREATE OR REPLACE ROW ACCESS POLICY SECURITY.RAP_CC_ENT AS
(
     P_COST_CENTER VARCHAR
    ,P_ENTITY VARCHAR
) 
RETURNS BOOLEAN ->
EXISTS
(
    SELECT
        *
    FROM
        SECURITY.RLS_COST_CENTER
    WHERE
        COST_CENTER = P_COST_CENTER
        AND
        ARRAY_CONTAINS(RLS_ROLE::VARIANT, PARSE_JSON(CURRENT_AVAILABLE_ROLES())) 
)
AND
EXISTS
(
    SELECT
        *
    FROM
        SECURITY.RLS_ENTITY
    WHERE
        ENTITY = P_ENTITY
        AND
        ARRAY_CONTAINS(RLS_ROLE::VARIANT, PARSE_JSON(CURRENT_AVAILABLE_ROLES())) 
);

--assign RLS roles 
use role useradmin;
GRANT ROLE "RLS_COST_CENTER_BT_FINANCE" TO USER OSUNI;
GRANT ROLE "RLS_ENTITY_BT_NORDICS_LOCAL" TO USER OSUNI;

--test access 
USE ROLE SYSADMIN;

--enable/disable RAP on the table
ALTER TABLE COMPENSATION.EMPLOYEE_SALARY ADD  ROW ACCESS POLICY SECURITY.RAP_CC_ENT ON (COST_CENTER, ENTITY);
ALTER TABLE COMPENSATION.EMPLOYEE_SALARY DROP ROW ACCESS POLICY SECURITY.RAP_CC_ENT;

--test RAP with different contexts

SELECT CURRENT_USER(); --OSUNI
SELECT * FROM COMPENSATION.EMPLOYEE_SALARY; --data is filtered as expected

EXECUTE USING POLICY_CONTEXT (CURRENT_AVAILABLE_ROLES => '["SYSADMIN"]') AS 
SELECT * FROM COMPENSATION.EMPLOYEE_SALARY; --no results, as expected

EXECUTE USING POLICY_CONTEXT (CURRENT_AVAILABLE_ROLES => '["RLS_ENTITY_BT_FRANCE_LOCAL","RLS_COST_CENTER_BT_FINANCE"]') AS 
SELECT * FROM COMPENSATION.EMPLOYEE_SALARY; --French BT finance results, as expected






